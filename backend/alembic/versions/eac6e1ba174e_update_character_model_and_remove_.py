"""Update character model and remove prompt tables

Revision ID: eac6e1ba174e
Revises: 2d2eb4f8e736
Create Date: 2025-08-04 03:28:56.359314

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'eac6e1ba174e'
down_revision: Union[str, None] = '2d2eb4f8e736'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop prompt tables
    op.drop_index('ix_prompts_id', table_name='prompts')
    op.drop_index('ix_prompts_name', table_name='prompts')
    op.drop_table('prompts')
    op.drop_index('ix_common_prompts_id', table_name='common_prompts')
    op.drop_table('common_prompts')
    
    # Add new columns with temporary defaults
    op.add_column('characters', sa.Column('age', sa.Integer(), nullable=True))
    op.add_column('characters', sa.Column('intro', sa.Text(), nullable=True))
    op.add_column('characters', sa.Column('personality_tags', sa.JSON(), nullable=True))
    op.add_column('characters', sa.Column('interest_tags', sa.JSON(), nullable=True))
    op.add_column('characters', sa.Column('prompt', sa.Text(), nullable=True))
    
    # Migrate existing data
    op.execute("""
        UPDATE characters 
        SET age = 25,
            intro = COALESCE(description, ''),
            personality_tags = '[]',
            interest_tags = '[]',
            prompt = system_prompt
        WHERE age IS NULL
    """)
    
    # Make columns NOT NULL after data migration
    with op.batch_alter_table('characters') as batch_op:
        batch_op.alter_column('age', nullable=False)
        batch_op.alter_column('intro', nullable=False)
        batch_op.alter_column('personality_tags', nullable=False)
        batch_op.alter_column('interest_tags', nullable=False)
        batch_op.alter_column('prompt', nullable=False)
    
    # Drop old columns
    op.drop_column('characters', 'system_prompt')
    op.drop_column('characters', 'description')
    op.drop_column('characters', 'gender')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('characters', sa.Column('gender', sa.VARCHAR(length=6), nullable=False))
    op.add_column('characters', sa.Column('description', sa.TEXT(), nullable=True))
    op.add_column('characters', sa.Column('system_prompt', sa.TEXT(), nullable=False))
    op.drop_column('characters', 'prompt')
    op.drop_column('characters', 'interest_tags')
    op.drop_column('characters', 'personality_tags')
    op.drop_column('characters', 'intro')
    op.drop_column('characters', 'age')
    op.create_table('common_prompts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('prompt_text', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_common_prompts_id', 'common_prompts', ['id'], unique=False)
    op.create_table('prompts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('variables', sqlite.JSON(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_prompts_name', 'prompts', ['name'], unique=False)
    op.create_index('ix_prompts_id', 'prompts', ['id'], unique=False)
    # ### end Alembic commands ###
