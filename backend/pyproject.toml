[project]
name = "lionrocket-backend"
version = "1.0.0"
description = "Lion Rocket AI Chat Service - Backend"
requires-python = ">=3.11"
dependencies = [
    # FastAPI and dependencies
    "fastapi==0.109.0",
    "uvicorn[standard]==0.27.0",
    "python-multipart==0.0.6",
    # Database
    "sqlalchemy==2.0.25",
    "alembic==1.13.1",
    "aiosqlite==0.19.0",
    # Authentication
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-dotenv==1.0.0",
    # Validation
    "pydantic==2.5.3",
    "pydantic-settings==2.1.0",
    "email-validator>=2.1.1",
    # Claude API
    "anthropic>=0.25.0",
    # HTTP Client
    "httpx==0.26.0",
    "aiofiles==23.2.1",
    # CORS
    "fastapi-cors==0.0.6",
    # Rate limiting
    "slowapi==0.1.9",
    # Date/Time
    "python-dateutil==2.8.2",
]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.3",
    "pytest-cov>=4.1.0",
    
    # Development
    "black>=23.12.1",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pip-audit>=2.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]
