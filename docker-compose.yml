version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: lionrocket-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lionrocket}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lionrocket-network

  # Backend API Service (Python 3.11.0 with UV)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lionrocket-backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@db:5432/lionrocket}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      JWT_SECRET: ${JWT_SECRET:-super-secret-jwt-key-change-in-production-at-least-32-chars-long}
      JWT_ALGORITHM: ${JWT_ALGORITHM:-HS256}
      JWT_EXPIRATION_HOURS: ${JWT_EXPIRATION_HOURS:-24}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:-${ANTHROPIC_API_KEY}}
      CLAUDE_MODEL: ${CLAUDE_MODEL:-claude-3-opus-20240229}
      CLAUDE_MAX_TOKENS: ${CLAUDE_MAX_TOKENS:-1000}
      CLAUDE_TEMPERATURE: ${CLAUDE_TEMPERATURE:-0.7}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      DEBUG: ${DEBUG:-true}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - lionrocket-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: lionrocket-frontend
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    ports:
      - "5173:5173"
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0
    networks:
      - lionrocket-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: lionrocket-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - lionrocket-network
    profiles:
      - production

networks:
  lionrocket-network:
    driver: bridge

volumes:
  postgres_data:
  backend_uploads: