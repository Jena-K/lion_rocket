apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: lionrocket
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
  - port: 16686
    targetPort: 16686
    protocol: TCP
    name: query-http
  - port: 16687
    targetPort: 16687
    protocol: TCP
    name: admin-http
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: lionrocket
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
  - port: 14250
    targetPort: 14250
    protocol: TCP
    name: grpc
  - port: 14268
    targetPort: 14268
    protocol: TCP
    name: http
  - port: 9411
    targetPort: 9411
    protocol: TCP
    name: zipkin
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: lionrocket
  labels:
    app: jaeger
    component: agent
spec:
  type: ClusterIP
  clusterIP: None  # Headless service for direct pod communication
  ports:
  - port: 5775
    targetPort: 5775
    protocol: UDP
    name: zk-compact-trft
  - port: 5778
    targetPort: 5778
    protocol: TCP
    name: config-rest
  - port: 6831
    targetPort: 6831
    protocol: UDP
    name: jg-compact-trft
  - port: 6832
    targetPort: 6832
    protocol: UDP
    name: jg-binary-trft
  - port: 14271
    targetPort: 14271
    protocol: TCP
    name: admin-http
  selector:
    app: jaeger
    component: all-in-one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: lionrocket
  labels:
    app: jaeger
    component: all-in-one
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
      annotations:
        sidecar.istio.io/inject: "false"  # Disable Istio sidecar for Jaeger
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.50
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "memory"  # Use in-memory storage for development
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        ports:
        - containerPort: 5775
          protocol: UDP
        - containerPort: 5778
          protocol: TCP
        - containerPort: 6831
          protocol: UDP
        - containerPort: 6832
          protocol: UDP
        - containerPort: 9411
          protocol: TCP
        - containerPort: 14250
          protocol: TCP
        - containerPort: 14268
          protocol: TCP
        - containerPort: 14269
          protocol: TCP
        - containerPort: 14271
          protocol: TCP
        - containerPort: 16686
          protocol: TCP
        - containerPort: 16687
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
# For production, use persistent storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jaeger-pvc
  namespace: lionrocket
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard